pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code using Maven...'
                // Task: Build the code using a build automation tool to compile and package your code.
                // Tool: Maven
                // e.g., mvn clean install
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running Unit and Integration tests...'
                // Task: Run unit tests to ensure the code functions as expected and run integration tests.
                // Tools: JUnit for unit tests, Selenium for integration tests.
                // e.g., mvn test
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis with SonarQube...'
                // Task: Analyze the code to ensure it meets industry standards.
                // Tool: SonarQube (for static code analysis)
                // e.g., sonar-scanner for Jenkins integration
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Running security scan using OWASP Dependency Check...'
                // Task: Perform a security scan to identify any vulnerabilities.
                // Tool: OWASP Dependency Check
                // e.g., dependency-check.sh
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging environment on AWS EC2...'
                // Task: Deploy the application to the staging server.
                // Tool: AWS CLI (for deploying to an AWS EC2 instance)
                // e.g., aws deploy
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment...'
                // Task: Run integration tests to ensure the application functions as expected in a production-like environment.
                // Tools: Selenium for UI tests, Postman for API tests.
                // e.g., postman run
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying the application to production on AWS EC2...'
                // Task: Deploy the application to the production server.
                // Tool: AWS CLI or Kubernetes (for production deployments)
                // e.g., aws deploy or kubectl apply
            }
        }
    }

    post {
        always {
            echo 'Sending email notifications...'
            // Task: Send email notifications at the end of test and security scan stages.
            // Tool: Jenkins Email Extension Plugin
            // Configuration: Send email with the build logs as attachment
        }

        success {
            mail to: 'minhtriet16032019@gmail.com',
                 subject: "SUCCESS: Build #${env.BUILD_NUMBER}",
                 body: "The build was successful! Check the attached logs for details.",
                 attachLog: true
        }

        failure {
            mail to: 'minhtriet16032019@gmail.com',
                 subject: "FAILURE: Build #${env.BUILD_NUMBER}",
                 body: "The build has failed. Please review the logs for details.",
                 attachLog: true
        }
    }
}

