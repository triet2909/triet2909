pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code '
    
            }
        }

        stage('Unit and Integration Tests') {
            steps {
              sh  echo 'Running Unit and Integration tests...'
            }
        }

        stage('Code Analysis') {
            steps {
               sh echo 'Performing code analysis...'
            
        }

        stage('Security Scan') {
            steps {
                echo 'Running security scan ...'
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging environment '
                // Task: Deploy the application to the staging server.
                // Tool: AWS CLI (for deploying to an AWS EC2 instance)
                // e.g., aws deploy
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment...'
                // Task: Run integration tests to ensure the application functions as expected in a production-like environment.
                // Tools: Selenium for UI tests, Postman for API tests.
                // e.g., postman run
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying the application to production '
                // Task: Deploy the application to the production server.
                // Tool: AWS CLI or Kubernetes (for production deployments)
                // e.g., aws deploy or kubectl apply
            }
        }
    }

    post {
        always {
            echo 'Sending email notifications...'
            // Task: Send email notifications at the end of test and security scan stages.
            // Tool: Jenkins Email Extension Plugin
            // Configuration: Send email with the build logs as attachment
        }

        success {
            mail to: 'minhtriet16032019@gmail.com',
                 subject: "SUCCESS: Build #${env.BUILD_NUMBER}",
                 body: "The build was successful! Check the attached logs for details.",
                 attachLog: true
        }

        failure {
            mail to: 'minhtriet16032019@gmail.com',
                 subject: "FAILURE: Build #${env.BUILD_NUMBER}",
                 body: "The build has failed. Please review the logs for details.",
                 attachLog: true
        }
    }
}

